name: Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2
        with:
          path: ${{ github.event.repository.name }}
            
      - name: Checkout `unmanaged`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/unmanaged
          token: ${{ secrets.PAT }}
          path: unmanaged
      
      - name: Checkout `types`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/types
          token: ${{ secrets.PAT }}
          path: types
      
      - name: Checkout `collections`
        uses: actions/checkout@v4.1.2
        with:
          repository: simulation-tree/collections
          token: ${{ secrets.PAT }}
          path: collections
            
      - name: Setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version:  |
            9.0.x
            10.0.x

      - name: Set VERSION variable from tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
            
      - name: Build `Worlds.Core`
        run: dotnet build "${{ github.event.repository.name }}/core" -c Debug /p:Version=${VERSION}
      
      - name: Build `Worlds.Core`
        run: dotnet build "${{ github.event.repository.name }}/core" -c Release /p:Version=${VERSION}
      
      - name: Build `Worlds.Generator`
        run: dotnet build "${{ github.event.repository.name }}/generator" -c Debug /p:Version=${VERSION}
      
      - name: Build `Worlds.Generator`
        run: dotnet build "${{ github.event.repository.name }}/generator" -c Release /p:Version=${VERSION}
      
      - name: Build `Worlds`
        run: dotnet build "${{ github.event.repository.name }}/source" -c Debug /p:Version=${VERSION}
      
      - name: Build `Worlds`
        run: dotnet build "${{ github.event.repository.name }}/source" -c Release /p:Version=${VERSION}
      
      - name: Build `Worlds.Tests`
        run: dotnet build "${{ github.event.repository.name }}/tests" -c Debug /p:Version=${VERSION}
      
      - name: Build `Worlds.Tests`
        run: dotnet build "${{ github.event.repository.name }}/tests" -c Release /p:Version=${VERSION}
      
      - name: Build `Worlds.TypesPreGenerator`
        run: dotnet build "${{ github.event.repository.name }}/types pregenerator" -c Debug /p:Version=${VERSION}
      
      - name: Build `Worlds.TypesPreGenerator`
        run: dotnet build "${{ github.event.repository.name }}/types pregenerator" -c Release /p:Version=${VERSION}
            
      - name: Test
        run: dotnet test "${{ github.event.repository.name }}/tests" -c Release --logger "trx" --framework net10.0
            
      - name: Pack `Worlds.Core`
        run: dotnet pack "${{ github.event.repository.name }}/core" /p:Version=${VERSION} --no-build --output .
      
      - name: Pack `Worlds.Generator`
        run: dotnet pack "${{ github.event.repository.name }}/generator" /p:Version=${VERSION} --no-build --output .
      
      - name: Pack `Worlds`
        run: dotnet pack "${{ github.event.repository.name }}/source" /p:Version=${VERSION} --no-build --output .
      
      - name: Pack `Worlds.TypesPreGenerator`
        run: dotnet pack "${{ github.event.repository.name }}/types pregenerator" /p:Version=${VERSION} --no-build --output .

      - name: Add NuGet Source
        run: dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --name github --username ${{ github.repository_owner }} --password ${{ github.token }} --store-password-in-clear-text
            
      - name: Publish `Worlds.Core`
        run: dotnet nuget push Worlds.Core.${VERSION}.nupkg --source github --api-key ${NUGET_TOKEN}
        env:
          NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}
      
      - name: Publish `Worlds.Generator`
        run: dotnet nuget push Worlds.Generator.${VERSION}.nupkg --source github --api-key ${NUGET_TOKEN}
        env:
          NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}
      
      - name: Publish `Worlds`
        run: dotnet nuget push Worlds.${VERSION}.nupkg --source github --api-key ${NUGET_TOKEN}
        env:
          NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}
      
      - name: Publish `Worlds.TypesPreGenerator`
        run: dotnet nuget push Worlds.TypesPreGenerator.${VERSION}.nupkg --source github --api-key ${NUGET_TOKEN}
        env:
          NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}